openapi: 3.0.0
info:
  title: Groups
  version: '1.0'
  description: Group Model
servers:
  - url: 'http://localhost:3000/Groups'
paths:
  /insert:
    post:
      summary: New Group
      operationId: post-insert
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
      tags:
        - API
      description: Add new group to the system
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                parentGroupID:
                  type: integer
              required:
                - name
  '/delete/{groupID}':
    delete:
      summary: Delete Group
      operationId: delete-delete
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Group Not Found
      tags:
        - API
      description: |-
        Soft delete group from the system.
        The group that will be deleted should be not linked to any user or group "As Parent".
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
    parameters:
      - schema:
          type: string
        name: groupID
        in: path
        required: true
        description: Token
  '/show/{groupID}':
    parameters:
      - schema:
          type: string
        name: groupID
        in: path
        required: true
    get:
      summary: Show Group
      tags:
        - API
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Group Not Found
      operationId: get-show-groupID
      description: Show group with its supgroups.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
  '/showUsers/{groupID}':
    parameters:
      - schema:
          type: string
        name: groupID
        in: path
        required: true
    get:
      summary: Show Group Users
      tags:
        - API
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Group Not Found
      operationId: get-showUsers-groupID
      description: Return all linked users to the group.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
  /update:
    post:
      summary: Update Group Data
      operationId: post-update
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Group Not Found
        '422':
          description: Unprocessable Entity (WebDAV)
      tags:
        - API
      description: Update group main data.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                groupID:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                parentGroupID:
                  type: integer
              required:
                - groupID
                - name
  /all:
    get:
      summary: All Groups (Not Paginated)
      tags:
        - API
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: get-all
      description: Return all groups not Paginated used for comboboxes.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
    post:
      summary: All Groups (Paginated)
      operationId: post-all
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      description: |-
        Return all groups paginated.
        user can filter the groups and specify the groups per page.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token
      tags:
        - API
components:
  schemas:
    Group:
      title: Group
      type: object
      properties:
        groupID:
          type: integer
        name:
          type: string
        description:
          type: string
        parentGroupID:
          type: integer
          description: 'Groups->groupID'
        createdBy:
          type: integer
          description: 'Users->userID'
        updatedBy:
          type: integer
          description: 'Users->userID'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
      required:
        - groupID
        - name
        - createdBy
      x-tags:
        - Model
